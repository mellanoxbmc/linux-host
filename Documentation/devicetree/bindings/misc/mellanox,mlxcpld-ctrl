Mellanox CPLD Control.
----------------------
This binding defines the cpld control interface for Mellanox BMC based
swicthes.

Required properties:
- compatible = "mellanox,mlxcpld-ctrl"
- reg : I2C address

Optional properties:
- top_aggr_offset - top aggregation register offset.
- top_aggr_mask - top aggregation register mask.
- top_aggr_irq - interrupt for CPLD device.
- psu - power supply unit nodes.
	- aggr_mask - bit in aggregation mask.
	- reg - register offset.
	- mask - register mask.
	- psu<n>_eeprom - eeprom device node.
		- type - I2C driver name.
		- bus - I2C bus number.
		- addr = I2C device address.
- fan - fan unit nodes.
	- aggr_mask - bit in aggregation mask.
	- reg - register offset.
	- mask - register mask.
	- fan<n>_eeprom - eeprom device node.
		- type - I2C driver name.
		- bus - I2C bus number.
		- addr = I2C device address.
- pwr - power cable nodes.
	- aggr_mask - bit in aggregation mask.
	- reg - register offset.
	- mask - register mask.
	- pwr<n>_eeprom - controller device node.
		- type - I2C driver name.
		- bus - I2C bus number.
		- addr = I2C device address.
- reset - reset nodes.
	- reset<n> - reset control node.
		- label - symbolic name.
		- reg - register offset.
		- mask - attribute mask.
- cause - reset cause nodes.
	- cause<n> - cuase info node.
		- label - symbolic name.
		- reg - register offset.
		- mask - attribute mask.
- mux - mux nodes.
	- mux<n> - mux control node.
		- label - symbolic name.
		- reg - register offset.
		- mask - attribute mask.
		- bit - effective bit.
- gprw - general purpose register nodes.
	- gprw<n> - general purpose read-write register.
		- label - symbolic name.
		- reg - register offset.
		- mask - attribute mask.
- gpro - general purpose register nodes.
	- gpro<n> - general purpose read only register.
		- label - symbolic name.
		- reg - register offset.
		- mask - attribute mask.

Example:
	mlxcpld-ctrl@71 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "mellanox,mlxcpld-ctrl";
		reg = <0x71>;
		top_aggr_offset = <0x3a>;
		top_aggr_mask = <0x48>;
		top_aggr_irq = <0x20>;

		psu {
			aggr_mask = <0x08>;
			reg = <0x58>;
			mask = <0x03>;

			psu1_eeprom {
				type = "24c02";
				bus = <0x04>;
				addr = <0x51>;
			};

			psu2_eeprom {
				type = "24c02";
				bus = <0x04>;
				addr = <0x50>;
			};
		};

		pwr {
			aggr_mask = <0x08>;
			reg = <0x64>;
			mask = <0x03>;

			psu1_contoller {
				type = "dps4600";
				bus = <0x04>;
				addr = <0x59>;
			};

			psu2_contoller {
				type = "dps4600";
				bus = <0x04>;
				addr = <0x58>;
			};
		};

		fan {
			aggr_mask = <0x40>;
			reg = <0x88>;
			mask = <0x0f>;

			fan1_eeprom {
				type = "24c32";
				bus = <0x0f>;
				addr = <0x50>;
			};

			fan2_eeprom {
				type = "24c32";
				bus = <0x10>;
				addr = <0x50>;
			};

			fan3_eeprom {
				type = "24c32";
				bus = <0x11>;
				addr = <0x50>;
			};

			fan4_eeprom {
				type = "24c32";
				bus = <0x12>;
				addr = <0x50>;
			};
		};

		reset {
			#address-cells = <1>;
			#size-cells = <0>;
			reset1 {
				label = "bmc_reset_soft";
				reg = <0x17>;
				mask = <0xfe>;
			};

			reset2 {
				label = "system_reset_hard";
				reg = <0x17>;
				mask = <0xfd>;
			};

			reset3 {
				label = "cpu_reset_soft";
				reg = <0x17>;
				mask = <0xfb>;
			};

			reset4 {
				label = "cpu_reset_hard";
				reg = <0x17>;
				mask = <0xf7>;
			};

			reset5 {
				label = "cpu_reset_go";
				reg = <0x17>;
				mask = <0xef>;
			};
		};

		cause {
			#address-cells = <1>;
			#size-cells = <0>;
			cause1 {
				label = "ac_power_cycle";
				reg = <0x1d>;
				mask = <0xfe>;
			};

			cause2 {
				label = "dc_power_cycle";
				reg = <0x1d>;
				mask = <0xfd>;
			};

			cause3 {
				label = "cpu_power_down";
				reg = <0x1d>;
				mask = <0xfb>;
			};

			cause4 {
				label = "cpu_reboot";
				reg = <0x1d>;
				mask = <0xf7>;
			};

			cause5 {
				label = "cpu_shutdown";
				reg = <0x1d>;
				mask = <0xef>;
			};
			cause6 {
				label = "cpu_watchdog";
				reg = <0x1d>;
				mask = <0xef>;
			};
			cause7 {
				label = "cpu_kernel_panic";
				reg = <0x1d>;
				mask = <0xef>;
			};
			cause8 {
				label = "bmc_warm_reset";
				reg = <0x71>;
				mask = <0xfe>;
			};
			cause9 {
				label = "bmc_upgrade";
				reg = <0x71>;
				mask = <0xfd>;
			};
		};

		mux {
			#address-cells = <1>;
			#size-cells = <0>;
			mux1 {
				label = "system_uart";
				reg = <0x33>;
				mask = <0xf9>;
				bit = <0x00>;
			};

			mux2 {
				label = "sol_uart";
				reg = <0x33>;
				mask = <0xfa>;
				bit = <0x01>;
			};

			mux3 {
				label = "bmc_uart";
				reg = <0x33>;
				mask = <0xfc>;
				bit = <0x02>;
			};
		};
	};
